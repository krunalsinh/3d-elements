@property --b-tx {
    syntax: "<length>";
    initial-value: 0;
    inherits: false;
  }
  @property --b-ty {
    syntax: "<length>";
    initial-value: 0;
    inherits: false;
  }
  @property --b-tz {
    syntax: "<length>";
    initial-value: 0;
    inherits: false;
  }
  @property --e-ty {
    syntax: "<length>";
    initial-value: 0;
    inherits: false;
  }
  @property --b-ry {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }
  @property --rx {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }
  @property --bg-color {
    syntax: "<color>";
    initial-value: #fff;
    inherits: true;
  }
  *{
    box-sizing: border-box;
  }
  body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #232b2b;
    margin: 0;
    gap: 10px;
  }
  :root {
    --frame-size: 60vmin;
    --cell-size: calc(var(--frame-size) / 10);
  }
  .d-none {
    display: none;
  }
  .frame {
    --bg-color: red;
    --pattern-color: rgba(0,0,0,0.7);
    --pattern-1: linear-gradient(90deg, #0002, transparent 25% 75%, #0002),
        conic-gradient(
          from -45deg,
          #fff4 90deg,
          #fff2 0 180deg,
          #0004 0 270deg,
          #0002 0
        );
    --pattern-2: linear-gradient(135deg, var(--pattern-color) 25%, transparent 4%), linear-gradient(225deg, var(--pattern-color) 8%, transparent 1%), linear-gradient(45deg, var(--pattern-color) 2%, transparent 10%), linear-gradient(315deg, var(--pattern-color) 34%, transparent 2%);
    --pattern-3: repeating-linear-gradient(45deg, var(--pattern-color) 0, var(--pattern-color) 2px, var(--pattern-color) 0, #e5e5f703 51%);
    --pattern-4: repeating-radial-gradient( circle at 0 0, var(--pattern-color) 0, transparent 8px );
    --bg-pattern: var(--pattern-1);
    position: relative;
    height: var(--frame-size);
    aspect-ratio: 1;
    perspective: 9000px;
    transform: rotateX(-30deg) rotateY(90deg) rotateZ(0deg) scale(1);
    transform-style: preserve-3d;
    animation: rotatePlaneAnim 15000ms infinite linear;
    @keyframes rotatePlaneAnim {
      0% {
        transform: rotateX(-30deg) rotateY(0deg) rotateZ(0deg) scale(1);
      }
      100% {
        transform: rotateX(-30deg) rotateY(360deg) rotateZ(0deg) scale(1);
      }
    }
    &.pattern-1{
      --bg-pattern: var(--pattern-1);
    }
    &.pattern-2{
      --bg-pattern: var(--pattern-2);
      & i{
        background-position:  8px 0, 8px 0, 0 0, 0 0;
        background-size: 8px 8px;
        background-repeat: repeat;  
      }
    }
    &.pattern-3{
      --bg-pattern: var(--pattern-3);
      & i{
        background-size: 8px 8px;
      }
    }
    &.pattern-4{
      --bg-pattern: var(--pattern-4);
    }
    &.stop-anim{
      & .block{
        animation-play-state: paused;
      }
    }
  }
  .plane {
    inset: 0;
    position: absolute;
    transform-origin: center;
    background-color: #3491c3;
    transform: translateY(50%) rotateX(90deg);
    bottom: 0px;
    background-color: #e5e5f7;
    background-image: linear-gradient(#7e7e7e 1px, transparent 1px),
      linear-gradient(to right, #7e7e7e 1px, #e5e5f7 1px);
    background-size: var(--cell-size) var(--cell-size);
  }
  .block {
    position: absolute;
    transform-style: preserve-3d;
    transform: translateX(var(--b-tx)) translateY(var(--b-ty)) translateZ(var(--b-tz));
    & .ele{
      --height: var(--cell-size);
      --width: var(--cell-size);
      --depth: var(--cell-size);
      --e-ty: 0px;
      --e-tx: 0px;
      --e-tz: 0px;
      --calc-ty: calc( var(--frame-size) - var(--height) - var(--e-ty));
      --calc-tz: calc( (var(--cell-size) / 2) + var(--e-tz));
      --bg-color: red;
      position: absolute;
      height: var(--height);
      width: var(--width);
      transform-style: preserve-3d;
      transform: translateX(var(--e-tx)) translateY(var(--calc-ty)) translateZ(var(--calc-tz));
      & i{
        --i-tx: 0px;
        --i-ty: 0px;
        --i-tz: 0px;
        --i-rx: 0deg;
        --i-ry: 0deg;
        --i-rz: 0deg;
        position: absolute;
        display: block;
        background-color: var(--bg-color);
        border: 1px solid rgba(0,0,0,0.3);
        transform-style: preserve-3d;
        transform-origin: center;
        transform: rotateX(var(--i-rx)) rotateY(var(--i-ry)) translateY(var(--i-ty)) translateZ(var(--i-tz));
        &.front, &.back, &.left, &.right{
          height: var(--height);
        }
        &.front, &.back, &.top, &.bottom{
          width:  var(--width);
        }
        &.top, &.bottom{
          height: var(--depth);
          --i-rx: 90deg;
        }
        &.left, &.right{
          width: var(--depth);
          --i-ry: 90deg;
        }
        &.left{
          left: calc(var(--depth) / -2);
        }
        &.right{
          left: calc(var(--width) - (var(--depth) / 2));
        }
        &.top{
          top: calc(var(--depth) / -2);
        }
        &.bottom{
          top: calc(var(--height) - (var(--depth) / 2));
        }
        &.front{
          --i-tz: calc(var(--depth) / 2);
        }
        &.back{
          --i-tz: calc(var(--depth) / -2);
        }
      }
    }
  }
  .pattern-1 i{
      --units: calc(var(--cell-size) / 4);
      --brick1: #CC0000;
      --brick2: #DD0000;
      --lines: #565656;
      --gp-ln: 50%/calc(var(--units) * 10) calc(var(--units) * 5);
      --gp-cn: 50%/calc(var(--units) * 5) calc(var(--units) * 5);
      background: repeating-conic-gradient(from 90deg at 95% 55%, var(--lines) 0% 25%, #fff0 0% 100%) var(--gp-cn), 
          repeating-linear-gradient(180deg, var(--lines) 0 5%, #fff0 0 50%, var(--lines) 0 55%, var(--brick2) 0 100% ) var(--gp-ln), 
          repeating-linear-gradient(90deg, var(--brick1) 0 47.5%, var(--lines) 0 50%, var(--brick1) 0 97.5%, var(--lines) 0 100% ) var(--gp-ln);
  }
  .pattern-2 i {
        background: radial-gradient(circle at 0% 50%, rgba(96, 16, 48, 0) 9px, #005b0c 10px, rgba(96, 16, 48, 0) 11px) 0px 10px, radial-gradient(at 100% 100%, rgba(96, 16, 48, 0) 9px, #005b0c 10px, rgba(96, 16, 48, 0) 11px), #8a3;
      background-size: 20px 20px;
  }
  //-------------shapes
  .house {
    & .ele-1 {
      --height: calc(var(--cell-size) * 3);
      --width: calc(var(--cell-size) * 3);
      --depth: calc(var(--cell-size) * 5);
      --e-tx: calc(var(--cell-size) * 2);
    }
    & .ele-2 {
      --bg-color: #f3ae65;
      --height: calc(var(--cell-size) * 2);
      --width: calc(var(--cell-size) * 1);
      --depth: calc(var(--cell-size) * 1);
      --e-tx: calc(var(--cell-size) * 2 - (var(--cell-size) / 8));
      --e-tz: calc(var(--cell-size) * -1);
    }
    & .ele-3 {
          --bg-color: #f3ae65;
      --height: calc(var(--cell-size) * 1);
      --width: calc(var(--cell-size) * 1);
      --depth: calc(var(--cell-size) * 1);
      --e-tx: calc(var(--cell-size) * 3);
      --e-tz: calc(var(--cell-size) * 2 + (var(--cell-size) / 8));
      --e-ty: calc(var(--cell-size) * 1);
    }
    & .ele-4 {
      --bg-color: #7d4000;
      --height: calc(var(--cell-size) / 2);
      --width: calc(var(--cell-size) * 5);
      --depth: calc(var(--cell-size) * 6);
      --e-tx: calc(var(--cell-size) * 1);
      --e-tz: calc(var(--cell-size) * 0);
      --e-ty: calc(var(--cell-size) * 3);
      & i{
        --s: 16px;   
        --c1: #000;
        --c2: #5a5a5a;
        --l1:#0000  48%,var(--c1) 0 52%,#0000 0;
        --l2:#0000 1.3%,var(--c2) 0 32%,#0000 0;
        background:
          linear-gradient(-45deg,var(--l2)),
          linear-gradient( 45deg,var(--l1)),
          linear-gradient( 45deg,var(--l2)) calc(var(--s)/2) calc(var(--s)/2),
          linear-gradient(-45deg,var(--l1)) var(--c2);
        background-size: calc(2*var(--s)) var(--s),var(--s) var(--s);
      }
    }
    & .ele-5 {
      --bg-color: #5d0000;
      --height: calc(var(--cell-size) * 1);
      --width: calc(var(--cell-size) * 1);
      --depth: calc(var(--cell-size) * 1);
      --e-tx: calc(var(--cell-size) * 4);
      --e-tz: calc(var(--cell-size) * 1);
      --e-ty: calc(var(--cell-size) * 4 - var(--cell-size) / 2);
    }
    & .ele-6{
      --bg-color: #666;
      --height: calc(var(--cell-size) / 5);
      --width: calc(var(--cell-size) / 5);
      --depth: calc(var(--cell-size) / 5);
      --e-tx: calc(var(--cell-size) * 4.5);
      --e-tz: calc(var(--cell-size) * 1);
      --e-ty: calc(var(--cell-size) * 5 - var(--cell-size) / 2);
      animation: moveToTopAnima 8000ms infinite ease-in;
      & i{
        border: none;
      }
      @keyframes moveToTopAnima{
         0%{
           --bg-color: #b9b9b9;
          --e-ty: calc(var(--cell-size) * 4 - var(--cell-size) / 2);
        }
        33.33%,100%{
          --bg-color: transparent;
          --e-ty: calc(var(--cell-size) * 7 - var(--cell-size) / 2);
        }
      }
    }
    & .ele-7{
      --bg-color: #666;
      --height: calc(var(--cell-size) / 5);
      --width: calc(var(--cell-size) / 5);
      --depth: calc(var(--cell-size) / 5);
      --e-tx: calc(var(--cell-size) * 4 + var(--cell-size) / 2);
      --e-tz: calc(var(--cell-size) * 1 - var(--cell-size) / 4);
      --e-ty: calc(var(--cell-size) * 5 - var(--cell-size) / 2);
      animation: moveToTopAnima1 8000ms infinite ease-in;
      & i{
        border: none;
      }
      @keyframes moveToTopAnima1{
        0%, 33.33%{
          --bg-color: #b9b9b9;
          --e-ty: calc(var(--cell-size) * 4 - var(--cell-size) / 2);
        }
        66.66%, 100%{
          --bg-color: transparent;
          --e-ty: calc(var(--cell-size) * 7 - var(--cell-size) / 2);
        }
      }
    }
    & .ele-8{
      --bg-color: #666;
      --height: calc(var(--cell-size) / 5);
      --width: calc(var(--cell-size) / 5);
      --depth: calc(var(--cell-size) / 5);
       --e-tx: calc(var(--cell-size) * 4 + var(--cell-size) / 2);
      --e-tz: calc(var(--cell-size) * 2 - var(--cell-size) / 1.5);
      --e-ty: calc(var(--cell-size) * 5 - var(--cell-size) / 2);
      animation: moveToTopAnima2 8000ms infinite ease-in;
      & i{
        border: none;
      }
      @keyframes moveToTopAnima2{
        0%, 66.66%{
          --bg-color: #b9b9b9;
          --e-ty: calc(var(--cell-size) * 4 - var(--cell-size) / 2);
        }
        100%{
          --bg-color: transparent;
          --e-ty: calc(var(--cell-size) * 7 - var(--cell-size) / 2);
        }
      }
    }
  }
  .tree{
    &.tree-1{
      --b-tz:calc(var(--cell-size) * 2);
      --b-tx:calc(var(--cell-size) * 2);
    }
    & .ele-1{
      --bg-color: #5e3912;
      --height: calc(var(--cell-size) * 7);
      --e-tx: calc(var(--cell-size) * 7);
    }
    & .ele-2{
      --bg-color: #015f01;
      --height: calc(var(--cell-size) * 5);
      --width: calc(var(--cell-size) + (var(--cell-size) / 2));
      --depth: calc(var(--cell-size) + (var(--cell-size) / 2));
      --e-tx: calc(var(--cell-size) * 7 - (var(--cell-size) / 5));
      --e-ty: calc(var(--cell-size) * 3);
    }
    & .ele-3{
      --bg-color: #015f01;
      --height: calc(var(--cell-size) * 4);
      --width: calc(var(--cell-size) * 3 - (var(--cell-size) / 1.5));
      --depth: calc(var(--cell-size) * 2 + (var(--cell-size) / 2));
      --e-tx: calc(var(--cell-size) * 7 - (var(--cell-size) / 2));
      --e-ty: calc(var(--cell-size) * 3 + (var(--cell-size) / 2));
    }
    & .ele-4{
      --bg-color: #015f01;
      --height: calc(var(--cell-size) * 3);
      --width: calc(var(--cell-size) * 4 - (var(--cell-size) / 1.5));
      --depth: calc(var(--cell-size) * 3 + (var(--cell-size) / 2));
      --e-tx: calc(var(--cell-size) * 5.5 + (var(--cell-size) / 2));
      --e-ty: calc(var(--cell-size) * 4 + (var(--cell-size) / 5));
    }
    & .ele-5{
      --bg-color: #015f01;
      --height: calc(var(--cell-size) * 2);
      --width: calc(var(--cell-size) * 5 - (var(--cell-size) / 2));
      --depth: calc(var(--cell-size) * 4 + (var(--cell-size) / 2));
      --e-tx: calc(var(--cell-size) * 5 + (var(--cell-size) / 2));
      --e-ty: calc(var(--cell-size) * 5 - (var(--cell-size) / 5));
    }
    & .ele-6{
      --bg-color: #015f01;
      --height: calc(var(--cell-size) * 1);
      --width: calc(var(--cell-size) * 6 - (var(--cell-size) / 2));
      --depth: calc(var(--cell-size) * 5 + (var(--cell-size) / 2));
      --e-tx: calc(var(--cell-size) * 4.5 + (var(--cell-size) / 2));
      --e-ty: calc(var(--cell-size) * 5 + (var(--cell-size) / 5));
    }
  
  }
  
  
  //------------position
  